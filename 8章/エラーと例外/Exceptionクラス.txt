//Exceptionクラス//
・「クラス」というのは「関数(def)」をもっと便利にしたようなもの。
・SyntaxErrorやZeroDivisionErrorなどはエラーではなくクラス。
・クラスは「元となるクラス」の機能を継承(拡張)して、
新しいクラスを作ることができる。
・ZeroDivisionErrorのようなエラーに関するクラスは
全てExceptionクラスを継承(拡張)してできたクラス。

//例外処理//
例外は、致命的なエラーではない。想定できる例外であれば、プログラムの
実行を中止せずに続行することもできる。

ファイルを読み込もうとして、そのファイルが存在しなかった場合、プログラムが
終了してしまうよりも、入力ファイル指定のやり直しができた方が便利である。

他にも、行列計算でゼロで除算してしまう例外が発生したときに、考えられる
対応を表示してくれれば、すぐに入力データを修正して対応することができるかも。

このように、例外が生じた場合でもプログラムを終了せず、その時の対応を
指定することができれば便利である。そして、この例外に対する処理のことを
「例外処理」という。